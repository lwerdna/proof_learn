#lang pie

(claim sub1
    (-> Nat Nat))
(define sub1
    (lambda (x)
        (which-Nat x
            0
            (lambda (k) k))))

(check-same Nat (sub1 5) 4)
(check-same Nat (sub1 1) 0)
(check-same Nat (sub1 0) 0)

(claim Pear
    U)
(define Pear
    (Pair Nat Nat))

; (a,b) -> (a-1, b-1)
(claim sub1pear
    (-> Pear
        Pear))
(define sub1pear
    (lambda (x)
        (cons (sub1 (car x)) (sub1 (cdr x)))))

(check-same Pear (cons 2 3) (sub1pear (cons 3 4)))
(check-same Pear (cons 0 3) (sub1pear (cons 1 4)))
(check-same Pear (cons 0 3) (sub1pear (cons 0 4)))
(check-same Pear (cons 9 0) (sub1pear (cons 10 1)))
(check-same Pear (cons 9 0) (sub1pear (cons 10 0)))
(check-same Pear (cons 27 33) (sub1pear (cons 28 34)))


